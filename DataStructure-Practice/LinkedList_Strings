class LinkedList
{
    private Node head;

    public LinkedList() {
        head = null;
    }

    public void addAtFront(String str) {
        Node newNode = new Node(str);
        newNode.setNext(head);
        head = newNode;
    }

    public void remove(String str) {
        Node current = head;
        Node previous = head;

        if (current.getData().equals(str)) {
            head = current.getNext();
        } else {
            while (current.getNext() != null) {
                previous = current;
                current = current.getNext();
                if (current.getData().equals(str)) {
                    previous.setNext(current.getNext());
                }
            }
        }
    }

    public String toString() {
        Node current = head;
        String listString;

        if (current != null) {
            listString = current.getData() + "\n";
            while (current.getNext() != null) {
                current = current.getNext();
                listString += current.getData() + "\n";
            }
            return(listString);
        } else {
            return("There are no items in list.");
        }
    }
}

class Node {
    public String data;
    public Node next;

    public Node(String newData) {
        data = newData;
        next = null;
    }

    public Node getNext() {
        return(next);
    }

    public void setNext(Node newNode) {
        next = newNode;
    }

    public String getData() {
        return(data);
    }
}

public class LinkedListCode {

    public static void main(String[] args) {
        LinkedList list = new LinkedList();

        list.addAtFront("Sachar");
        list.addAtFront("Osborne");
        list.addAtFront("Suess");

        System.out.println(list.toString());

        list.remove("Suess");
        list.remove("Sachar");
        list.remove("Osborne");
        System.out.println(list.toString());
    }
}

